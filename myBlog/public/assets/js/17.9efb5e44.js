(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{592:function(s,a,n){s.exports=n.p+"assets/img/js_mianshi.a3764635.png"},627:function(s,a,n){"use strict";n.r(a);var t=n(6),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1、javascript-有几种数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、javascript-有几种数据类型"}},[s._v("#")]),s._v(" 1、JavaScript 有几种数据类型？")]),s._v(" "),t("ul",[t("li",[s._v("number：数字类型")]),s._v(" "),t("li",[s._v("string：字符串类型")]),s._v(" "),t("li",[s._v("boolean：布尔值类型")]),s._v(" "),t("li",[s._v("undefined：未定义类型")]),s._v(" "),t("li",[s._v("null：空类型")]),s._v(" "),t("li",[s._v("object：对象类型")]),s._v(" "),t("li",[s._v("symbol：symbol 类型")]),s._v(" "),t("li",[s._v("bigint：大数字类型")])]),s._v(" "),t("h2",{attrs:{id:"_2、javascript-最大安全数字与最小安全数字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、javascript-最大安全数字与最小安全数字"}},[s._v("#")]),s._v(" 2、JavaScript 最大安全数字与最小安全数字？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("console.log(Number.MAX_SAFE_INTEGER)\n// 9007199254740991\nconsole.log(Number.MIN_SAFE_INTEGER)\n// -9007199254740991\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_3、深拷贝与浅拷贝的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、深拷贝与浅拷贝的区别"}},[s._v("#")]),s._v(" 3、深拷贝与浅拷贝的区别？")]),s._v(" "),t("ul",[t("li",[s._v("浅拷贝：只拷贝第一层，深层的依然是引用，改变深层会影响原对象")]),s._v(" "),t("li",[s._v("深拷贝：每一层都拷贝了，改变数据不会影响原对象")])]),s._v(" "),t("h2",{attrs:{id:"_4、闭包是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、闭包是什么"}},[s._v("#")]),s._v(" 4、闭包是什么？")]),s._v(" "),t("p",[s._v("闭包是一个函数，是一个能让外部访问到函数内部的函数")]),s._v(" "),t("ul",[t("li",[s._v("优点：使外部能访问内部，延长内部变量寿命")]),s._v(" "),t("li",[s._v("缺点：滥用闭包造成内存泄漏")])]),s._v(" "),t("p",[s._v("闭包的例子")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function a () {\n  let num = 0\n\n  // 这是个闭包\n  return function () {\n     return ++num\n  }\n}\nconst b = a()\nconsole.log(b()) // 1\nconsole.log(b()) // 2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"_5、原型链是什么呀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、原型链是什么呀"}},[s._v("#")]),s._v(" 5、原型链是什么呀？")]),s._v(" "),t("p",[s._v("原型链是一条引用的链，实例的隐式原型指向构造函数的显式原型，可以使用"),t("code",[s._v("A instanceof B")]),s._v("来判断 B 是否在 A 的原型链上。")]),s._v(" "),t("p",[t("img",{attrs:{src:n(592),alt:"a"}})]),s._v(" "),t("h2",{attrs:{id:"_6、什么是变量提升-函数提升"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、什么是变量提升-函数提升"}},[s._v("#")]),s._v(" 6、什么是变量提升？函数提升？")]),s._v(" "),t("ul",[t("li",[s._v("变量提升")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("console.log(name) // undefined\nvar name = 'Sunshine_Lin'\n\nif (false) {\n  var age = 23\n}\nconsole.log(age) // undefined 不会报错\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[s._v("函数提升")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("console.log(fun) // function fun() {}\nfunction fun() {}\n\nif (false) {\n  function fun2(){}\n}\nconsole.log(fun2) // undefined 不会报错\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[s._v("函数提升优先级 > 变量提升优先级")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("console.log(fun) // function fun() {}\nvar fun = 'Sunshie_Lin'\nfunction fun() {}\nconsole.log(fun) // 'Sunshie_Lin'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_7、isnan-与-number-isnan-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、isnan-与-number-isnan-的区别"}},[s._v("#")]),s._v(" 7、isNaN 与 Number.isNaN 的区别？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("isNaN")]),s._v("：除了判断 NaN 为 true 外，还会把不能转成数字判断为 true，例如'dasd'")]),s._v(" "),t("li",[t("code",[s._v("Number.isNaN")]),s._v("：只会判断 NaN 为 true")])]),s._v(" "),t("h2",{attrs:{id:"_8、解决遍历对象时-把原型上的属性遍历出来了咋办"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、解决遍历对象时-把原型上的属性遍历出来了咋办"}},[s._v("#")]),s._v(" 8、解决遍历对象时，把原型上的属性遍历出来了咋办？")]),s._v(" "),t("p",[s._v("使用"),t("code",[s._v("hasOwnProperty")]),s._v("判断")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Person(name) {\n  this.name = name\n}\nPerson.prototype.age = 23\nconst person = new Person('Sunshine_lin')\nfor (const key in person) { console.log(key) } // name age\n// 使用 hasOwnProperty\nfor (const key in person) {\n  person.hasOwnProperty(key) && console.log(key)\n} // name\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"_9、valueof-与-tostring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、valueof-与-tostring"}},[s._v("#")]),s._v(" 9、valueOf 与 toString？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("valueOf")]),s._v("比较偏向于计算，"),t("code",[s._v("toString")]),s._v("偏向于显示")]),s._v(" "),t("li",[s._v("对象转换时，优先调用"),t("code",[s._v("toString")])]),s._v(" "),t("li",[s._v("强转字符串时优先调用"),t("code",[s._v("toString")]),s._v("，强转数字时优先调用"),t("code",[s._v("valueOf")])]),s._v(" "),t("li",[s._v("正常情况下，优先调用"),t("code",[s._v("toString")])]),s._v(" "),t("li",[s._v("运算操作符情况下优先调用"),t("code",[s._v("valueOf")])])]),s._v(" "),t("h2",{attrs:{id:"_10、javascript-变量在内存中具体存储形式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10、javascript-变量在内存中具体存储形式"}},[s._v("#")]),s._v(" 10、JavaScript 变量在内存中具体存储形式？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("基本数据类型")]),s._v("：存在栈内存里")]),s._v(" "),t("li",[t("code",[s._v("引用数据类型")]),s._v("：指针存栈内存，指向堆内存中一块地址，内容存在堆内存中")]),s._v(" "),t("li",[s._v("也有说法说其实 JavaScript 所有数据都存堆内存中，我也比较赞同这种说法")])]),s._v(" "),t("h2",{attrs:{id:"_11、讲一讲-javascript-的装箱和拆箱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11、讲一讲-javascript-的装箱和拆箱"}},[s._v("#")]),s._v(" 11、讲一讲 JavaScript 的装箱和拆箱？")]),s._v(" "),t("p",[t("strong",[s._v("装箱：把基本数据类型转化为对应的引用数据类型的操作")])]),s._v(" "),t("p",[s._v("看以下代码，s1 只是一个基本数据类型，他是怎么能调用 indexOf 的呢？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const s1 = 'Sunshine_Lin'\nconst index = s1.indexOf('_')\nconsole.log(index) // 8\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("原来是 JavaScript 内部进行了装箱操作")]),s._v(" "),t("ul",[t("li",[s._v("1、创建 String 类型的一个实例；")]),s._v(" "),t("li",[s._v("2、在实例上调用指定的方法；")]),s._v(" "),t("li",[s._v("3、销毁这个实例；")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var temp = new String('Sunshine_Lin')\nconst index = temp.indexOf('_')\ntemp = null\nconsole.log(index) // 8\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("拆箱：将引用数据类型转化为对应的基本数据类型的操作")])]),s._v(" "),t("p",[s._v("通过 valueOf 或者 toString 方法实现拆箱操作")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('var objNum = new Number(123);\nvar objStr =new String("123");\nconsole.log( typeof objNum ); //object\nconsole.log( typeof objStr ); //object\nconsole.log( typeof objNum.valueOf() ); //number\nconsole.log( typeof objStr.valueOf() ); //string\n\nconsole.log( typeof objNum.toString() ); // string\nconsole.log( typeof objStr.toString() ); // string\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"_12、null-和-undefined-的异同点有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12、null-和-undefined-的异同点有哪些"}},[s._v("#")]),s._v(" 12、null 和 undefined 的异同点有哪些？")]),s._v(" "),t("p",[t("strong",[s._v("相同点")])]),s._v(" "),t("ul",[t("li",[s._v("1、都是空类型")]),s._v(" "),t("li",[s._v("2、转布尔值都是 false，都是假值")]),s._v(" "),t("li",[s._v("3、null == undefined 为 true")])]),s._v(" "),t("p",[t("strong",[s._v("不同点")])]),s._v(" "),t("ul",[t("li",[s._v("1、typeof，前者为 object，后者为 undefined")]),s._v(" "),t("li",[s._v("2、null 转数字为 0，undefined 转数字为 NaN")]),s._v(" "),t("li",[s._v("3、null === undefined 为 false")])]),s._v(" "),t("h2",{attrs:{id:"_13、如何判断数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13、如何判断数据类型"}},[s._v("#")]),s._v(" 13、如何判断数据类型？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("typeof")]),s._v("：能判断 string、number、undefined、boolean、function、object（null 是 object）")]),s._v(" "),t("li",[t("code",[s._v("Object.prototype.toString.call()")]),s._v("：能判断大部分数据类型")]),s._v(" "),t("li",[t("code",[s._v("instanceOf")])])]),s._v(" "),t("h2",{attrs:{id:"_14、为什么-typeof-null-是-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14、为什么-typeof-null-是-object"}},[s._v("#")]),s._v(" 14、为什么 typeof null 是 object？")]),s._v(" "),t("p",[s._v("不同数据类型底层都是用二进制来表示的，二进制前三位为"),t("code",[s._v("000")]),s._v("则会被判断为 object，而 null 二进制全是 0，所以被判断成 object")]),s._v(" "),t("h2",{attrs:{id:"_15、-与-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15、-与-的区别"}},[s._v("#")]),s._v(" 15、== 与 === 的区别？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("==")]),s._v("：比较过程会进行隐式转换")]),s._v(" "),t("li",[t("code",[s._v("===")]),s._v("：值相同，类型相同才会为 true")])]),s._v(" "),t("h2",{attrs:{id:"_16、javascript-的隐式转换规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16、javascript-的隐式转换规则"}},[s._v("#")]),s._v(" 16、JavaScript 的隐式转换规则？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("转string类型")]),s._v("：+（字符串连接符）")]),s._v(" "),t("li",[t("code",[s._v("转number类型")]),s._v("：++/--(自增自减运算符) + - * / %(算术运算符) > < >= <= == != === !== (关系运算符)")]),s._v(" "),t("li",[t("code",[s._v("转boolean")]),s._v("：!（逻辑非运算符)")])]),s._v(" "),t("h2",{attrs:{id:"_17、双等号左右两边的转换规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17、双等号左右两边的转换规则"}},[s._v("#")]),s._v(" 17、双等号左右两边的转换规则？")]),s._v(" "),t("ul",[t("li",[s._v("1、null == undefined 为 true")]),s._v(" "),t("li",[s._v("2、如果有一个操作数是布尔值，则在比较相等性之前先将其转换为数值——false 转换为 0，而 true 转换为 1；")]),s._v(" "),t("li",[s._v("3、如果一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值")]),s._v(" "),t("li",[s._v("4、如果一个操作数是对象，另一个操作数不是，则调用对象的 toString()方法，用得到的基本类型值按照前面的规则进行比较")])]),s._v(" "),t("h2",{attrs:{id:"_18、undefined-undefined-为什么是-false"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18、undefined-undefined-为什么是-false"}},[s._v("#")]),s._v(" 18、undefined >= undefined 为什么是 false ？")]),s._v(" "),t("p",[s._v("隐式转换，变成"),t("code",[s._v("NaN >= NaN")]),s._v("，"),t("code",[s._v("NaN")]),s._v("不等于自身也不大于自身")]),s._v(" "),t("h2",{attrs:{id:"_19、null-null-为什么是-true"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19、null-null-为什么是-true"}},[s._v("#")]),s._v(" 19、null >= null 为什么是 true？")]),s._v(" "),t("p",[s._v("隐式转换，变成"),t("code",[s._v("0 >= 0")]),s._v("，为 true")]),s._v(" "),t("h2",{attrs:{id:"_20、-为什么是-true"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20、-为什么是-true"}},[s._v("#")]),s._v(" 20、[] == ![] 为什么是 true ？")]),s._v(" "),t("ul",[t("li",[s._v("第一步：转为"),t("code",[s._v("[] == false")])]),s._v(" "),t("li",[s._v("第二步：转为"),t("code",[s._v("[] == 0")])]),s._v(" "),t("li",[s._v("第三步：转为"),t("code",[s._v("'' == 0")])]),s._v(" "),t("li",[s._v("第四步：转为"),t("code",[s._v("0 == 0")])])]),s._v(" "),t("h2",{attrs:{id:"_21、0-1-0-2-0-3-对吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21、0-1-0-2-0-3-对吗"}},[s._v("#")]),s._v(" 21、0.1 + 0.2 === 0.3，对吗？")]),s._v(" "),t("p",[s._v("不对，JavaScript 存在"),t("code",[s._v("精度丢失")]),s._v("问题，由于有些小数无法用二进制表示，所以只能取近似值，解决方法有：")]),s._v(" "),t("ul",[t("li",[s._v("先转大数，再变小数")]),s._v(" "),t("li",[s._v("使用"),t("code",[s._v("toFixed")])])]),s._v(" "),t("h2",{attrs:{id:"_22、什么是匿名函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22、什么是匿名函数"}},[s._v("#")]),s._v(" 22、什么是匿名函数？")]),s._v(" "),t("p",[s._v("匿名函数，就是没有名字的函数，比如：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("(function(x, y){\n    alert(x + y);\n})(2, 3)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"_23、绑定点击事件有几种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23、绑定点击事件有几种方式"}},[s._v("#")]),s._v(" 23、绑定点击事件有几种方式？")]),s._v(" "),t("p",[s._v("三种")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("xxx.onclick = function (){}")])]),s._v(" "),t("li",[t("code",[s._v('<xxx onclick=""></xxx>')])]),s._v(" "),t("li",[t("code",[s._v("xxx.addEventListener('click', function(){}, false)")])])]),s._v(" "),t("h2",{attrs:{id:"_24、addeventlistener-的第三个参数是干嘛的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_24、addeventlistener-的第三个参数是干嘛的"}},[s._v("#")]),s._v(" 24、addEventListener 的第三个参数是干嘛的？")]),s._v(" "),t("p",[s._v("决定事件是"),t("code",[s._v("捕获阶段")]),s._v("执行还是"),t("code",[s._v("冒泡阶段")]),s._v("执行")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("true")]),s._v("：捕获")]),s._v(" "),t("li",[t("code",[s._v("false")]),s._v("：默认，冒泡")])]),s._v(" "),t("h2",{attrs:{id:"_25、函数声明和函数表达式的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_25、函数声明和函数表达式的区别"}},[s._v("#")]),s._v(" 25、函数声明和函数表达式的区别？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("函数声明")]),s._v("：享受函数提升")]),s._v(" "),t("li",[t("code",[s._v("函数表达式")]),s._v("：归类于变量声明，享受变量提升")]),s._v(" "),t("li",[t("code",[s._v("函数提升优先级 > 变量提升优先级")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("console.log(fun) // fun () {}\n// 函数表达式\nvar fun = function(name) {}\n// 函数声明\nfunction fun () {}\nconsole.log(fun) // fun (name) {}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"_26、javascript-的事件流模型有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_26、javascript-的事件流模型有哪些"}},[s._v("#")]),s._v(" 26、JavaScript 的事件流模型有哪些？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("事件冒泡")]),s._v("：由最具体的元素接收，并往上传播")]),s._v(" "),t("li",[t("code",[s._v("事件捕获")]),s._v("：由最不具体的元素接收，并往下传播")]),s._v(" "),t("li",[t("code",[s._v("DOM事件流")]),s._v("：事件捕获 -> 目标阶段 -> 事件冒泡")])]),s._v(" "),t("h2",{attrs:{id:"_27、ajax、axios、fetch-有啥区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_27、ajax、axios、fetch-有啥区别"}},[s._v("#")]),s._v(" 27、Ajax、Axios、Fetch 有啥区别？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Ajax")]),s._v("：是对 XMLHttpRequest(XHR)的封装")]),s._v(" "),t("li",[t("code",[s._v("Axios")]),s._v("：是基于 Promise 对 XHR 对象的封装")]),s._v(" "),t("li",[t("code",[s._v("Fetch")]),s._v("：是 window 的一个方法，基于 Promise，与 XHR 无关，不兼容 IE")])]),s._v(" "),t("h2",{attrs:{id:"_28、load、-document-ready、domcontentloaded-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_28、load、-document-ready、domcontentloaded-的区别"}},[s._v("#")]),s._v(" 28、load、$(document).ready、DOMContentLoaded 的区别？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("$(document).ready、DOMContentLoaded")]),s._v("：DOM 树构建完毕，但还没有请求静态资源")]),s._v(" "),t("li",[t("code",[s._v("load")]),s._v("：静态资源请求完毕")])]),s._v(" "),t("h2",{attrs:{id:"_29、如何阻止事件冒泡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_29、如何阻止事件冒泡"}},[s._v("#")]),s._v(" 29、如何阻止事件冒泡？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function stopBubble(e) {\n  if (e.stopPropagation) {\n    e.stopPropagation()\n  } else {\n    window.event.cancelBubble = true;\n  }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_30、如何阻止事件默认行为"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_30、如何阻止事件默认行为"}},[s._v("#")]),s._v(" 30、如何阻止事件默认行为？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function stopDefault(e) {\n  if (e.preventDefault) {\n    e.preventDefault();\n  } else {\n    window.event.returnValue = false;\n  }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_31、什么是事件委托"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_31、什么是事件委托"}},[s._v("#")]),s._v(" 31、什么是事件委托？")]),s._v(" "),t("p",[s._v("当子元素都需要绑定相同事件时，可以将事件绑在父元素上，优点有：")]),s._v(" "),t("ul",[t("li",[s._v("绑定在父元素，则只需绑定一次，节省性能")]),s._v(" "),t("li",[s._v("后续新增的子元素也可以触发父元素绑定的事件")])]),s._v(" "),t("h2",{attrs:{id:"_32、如何实现数组去重"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_32、如何实现数组去重"}},[s._v("#")]),s._v(" 32、如何实现数组去重？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 使用 Map 去重\nfunction quchong1(arr) {\n  const newArr = []\n  arr.reduce((pre, next) => {\n    if (!pre.get(next)) {\n      pre.set(next, 1)\n      newArr.push(next)\n    }\n    return pre\n  }, new Map())\n  return newArr\n}\n\n// 使用 Set 去重\nfunction quchong (arr) {\n    return [...new Set(arr)]\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h2",{attrs:{id:"_33、set-与-array-的区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_33、set-与-array-的区别是什么"}},[s._v("#")]),s._v(" 33、Set 与 Array 的区别是什么？")]),s._v(" "),t("ul",[t("li",[s._v("Set 使用 has 判断有无元素，数组使用索引")]),s._v(" "),t("li",[s._v("Set 添加元素使用方法 add，数组用 push、unshift")]),s._v(" "),t("li",[s._v("Set 长度为 size，数组为 length")]),s._v(" "),t("li",[s._v("Set 会自动把同样的基础数据类型去重，数组不能")]),s._v(" "),t("li",[s._v("Set 删除元素用 delete，数组用 splice、pop、shift")]),s._v(" "),t("li",[s._v("Set 可以使用 clear 清空，数组需要重新赋值[]")]),s._v(" "),t("li",[s._v("数组可以传入 new Set(array)，实现数组转 Set")]),s._v(" "),t("li",[s._v("Set 可以使用 keys、value 方法，转数组")]),s._v(" "),t("li",[s._v("Set 自带 forEach 方法进行遍历")])]),s._v(" "),t("h2",{attrs:{id:"_34、map-与-object-的区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_34、map-与-object-的区别是什么"}},[s._v("#")]),s._v(" 34、Map 与 Object 的区别是什么？")]),s._v(" "),t("ul",[t("li",[s._v("Map 使用 set 设置属性，对象使用 obj[key] = value")]),s._v(" "),t("li",[s._v("Map 使用 get 获取属性值，对象使用 obj[key]")]),s._v(" "),t("li",[s._v("Map 使用 has 判断属性存在与否，对象只能 obj[key]")]),s._v(" "),t("li",[s._v("Map 删除元素使用 delete 方法，对象使用 delete 关键字")]),s._v(" "),t("li",[s._v("Map 使用 clear 进行情空，对象需要重新赋值{}")]),s._v(" "),t("li",[s._v("Map 和对象都可以使用 entries 方法转数组键值对")]),s._v(" "),t("li",[s._v("Map 自带 forEach 方法进行遍历")])]),s._v(" "),t("h2",{attrs:{id:"_35、nan-是什么-有什么特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_35、nan-是什么-有什么特点"}},[s._v("#")]),s._v(" 35、NaN 是什么？有什么特点？")]),s._v(" "),t("ul",[t("li",[s._v("typeof NaN 为 number")]),s._v(" "),t("li",[s._v("NaN 不等于自身，不大于自身，不小于自身")]),s._v(" "),t("li",[s._v("NaN 可以使用"),t("code",[s._v("Number.isNaN")]),s._v("判断")]),s._v(" "),t("li",[s._v("NaN 是假值，转布尔值为 false")])]),s._v(" "),t("h2",{attrs:{id:"_36、处理异步的方法有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_36、处理异步的方法有哪些"}},[s._v("#")]),s._v(" 36、处理异步的方法有哪些？")]),s._v(" "),t("ul",[t("li",[s._v("回调函数")]),s._v(" "),t("li",[s._v("Promise")]),s._v(" "),t("li",[s._v("事件监听")]),s._v(" "),t("li",[s._v("发布订阅")]),s._v(" "),t("li",[s._v("async/await")])]),s._v(" "),t("h2",{attrs:{id:"_37、javascript-继承方式有几种"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_37、javascript-继承方式有几种"}},[s._v("#")]),s._v(" 37、JavaScript 继承方式有几种？")]),s._v(" "),t("p",[s._v("前置工作")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 定义一个动物类\nfunction Animal (name) {\n  // 属性\n  this.name = name || 'Animal';\n  // 实例方法\n  this.sleep = function(){\n    console.log(this.name + '正在睡觉！');\n  }\n}\n// 原型方法\nAnimal.prototype.eat = function(food) {\n  console.log(this.name + '正在吃：' + food);\n};\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h3",{attrs:{id:"_1、原型链继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、原型链继承"}},[s._v("#")]),s._v(" 1、原型链继承")]),s._v(" "),t("p",[s._v("核心：将父类的实例作为子类的原型")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Cat(){\n}\nCat.prototype = new Animal();\nCat.prototype.name = 'cat';\n\nvar cat = new Cat();\nconsole.log(cat.name); // cat\ncat.eat('fish') // cat正在吃：fish\ncat.sleep() // cat正在睡觉！\nconsole.log(cat instanceof Animal); //true\nconsole.log(cat instanceof Cat); //true\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("优点：")]),s._v(" "),t("ul",[t("li",[s._v("1、非常纯粹的继承关系，实例是子类的实例，也是父类的实例")]),s._v(" "),t("li",[s._v("2、父类新增原型方法/属性，子类都能访问到")]),s._v(" "),t("li",[s._v("3、简单，易于实现 缺点：")]),s._v(" "),t("li",[s._v("1、要想为子类新增属性和方法，必须要在"),t("code",[s._v("new Animal()")]),s._v("这样的语句之后执行，不能放构造器中")]),s._v(" "),t("li",[s._v("2、来自原型对象的所有属性被所有实例共享")]),s._v(" "),t("li",[s._v("3、创建子实例时，无法向父类构造函数传参")]),s._v(" "),t("li",[s._v("4、不支持多继承")])]),s._v(" "),t("h3",{attrs:{id:"_2、构造继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、构造继承"}},[s._v("#")]),s._v(" 2、构造继承")]),s._v(" "),t("p",[s._v("核心：使用父类的构造器来增强子类实例，等于是复制父类的实例属性给子类（没用到原型）")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Cat(name) {\n  Animal.call(this);\n  this.name = name || 'Tom';\n}\n\nvar cat = new Cat();\nconsole.log(cat.name); // Tom\ncat.sleep() // Tom正在睡觉！\nconsole.log(cat instanceof Animal); // false\nconsole.log(cat instanceof Cat); // true\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("优点：")]),s._v(" "),t("ul",[t("li",[s._v("1、解决了"),t("code",[s._v("原型链继承")]),s._v("中，子类实例共享父类引用属性的问题")]),s._v(" "),t("li",[s._v("2、创建子类实例时，可以向父类传递参数")]),s._v(" "),t("li",[s._v("3、可以实现多继承(call 多个父类对象) 缺点：")]),s._v(" "),t("li",[s._v("1、实例并不是父类的实例，知识子类的实例")]),s._v(" "),t("li",[s._v("2、是能继承父类的实例属性和方法，不能继承原型属性/方法")]),s._v(" "),t("li",[s._v("3、无法实现函数复用，每个子类都有父类实例函数的副本，影响性能")])]),s._v(" "),t("h3",{attrs:{id:"_3、实例继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、实例继承"}},[s._v("#")]),s._v(" 3、实例继承")]),s._v(" "),t("p",[s._v("核心：为父类实例添加新特性，作为子类实例返回")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Cat(name){\n  var instance = new Animal();\n  instance.name = name || 'Tom';\n  return instance;\n}\n\nvar cat = new Cat();\nconsole.log(cat.name) // Tom\ncat.sleep() // Tom正在睡觉！\nconsole.log(cat instanceof Animal); // true\nconsole.log(cat instanceof Cat); // false\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("优点：")]),s._v(" "),t("ul",[t("li",[s._v("1、不限制调用方式，不管是"),t("code",[s._v("new 子类()")]),s._v("还是"),t("code",[s._v("子类()")]),s._v("，返回的对象具有相同效果 缺点：")]),s._v(" "),t("li",[s._v("1、实例是父类的实例，不是子类的实例")]),s._v(" "),t("li",[s._v("2、不支持多继承")])]),s._v(" "),t("h3",{attrs:{id:"_4、拷贝继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、拷贝继承"}},[s._v("#")]),s._v(" 4、拷贝继承")]),s._v(" "),t("p",[s._v("核心：就一个一个拷贝")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Cat(name){\n  var animal = new Animal();\n  for(var p in animal){\n    Cat.prototype[p] = animal[p];\n  }\n  this.name = name || 'Tom';\n}\n\nvar cat = new Cat();\nconsole.log(cat.name); // Tom\ncat.sleep() // Tom正在睡觉！\nconsole.log(cat instanceof Animal); // false\nconsole.log(cat instanceof Cat); // true\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("优点：")]),s._v(" "),t("ul",[t("li",[s._v("1、支持多继承 缺点：")]),s._v(" "),t("li",[s._v("1、效率低，内存占用高（因为要拷贝父类的属性）")]),s._v(" "),t("li",[s._v("2、无法获取父类不可枚举方法（不可枚举方法，不能使用 for in 访问到）")])]),s._v(" "),t("h3",{attrs:{id:"_5、组合继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、组合继承"}},[s._v("#")]),s._v(" 5、组合继承")]),s._v(" "),t("p",[s._v("核心：通过父类构造，继承父类的属性并保留传参的优点，然后通过将父类实例作为子类原型，实现函数复用")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Cat(name){\n  Animal.call(this);\n  this.name = name || 'Tom';\n}\nCat.prototype = new Animal();\n\nCat.prototype.constructor = Cat;\n\nvar cat = new Cat();\nconsole.log(cat.name); // Tom\ncat.sleep() // Tom正在睡觉！\nconsole.log(cat instanceof Animal); // true\nconsole.log(cat instanceof Cat); // true\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("优点：")]),s._v(" "),t("ul",[t("li",[s._v("1、弥补了"),t("code",[s._v("构造继承")]),s._v("的缺陷，可以继承实例属性/方法，也可继承原型属性/方法")]),s._v(" "),t("li",[s._v("2、既是子类的实例，也是父类的实例")]),s._v(" "),t("li",[s._v("3、不存在引用属性共享问题")]),s._v(" "),t("li",[s._v("4、可传参")]),s._v(" "),t("li",[s._v("5、函数可复用 缺点：")]),s._v(" "),t("li",[s._v("1、调用了两次父类构造函数，生成了两份实例（子类实例将子类原型上的那份屏蔽了）")])]),s._v(" "),t("h3",{attrs:{id:"_6、寄生组合继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、寄生组合继承"}},[s._v("#")]),s._v(" 6、寄生组合继承")]),s._v(" "),t("p",[s._v("核心：通过寄生方式，砍掉父类的实例属性，这样，在调用两次父类的构造时，就不会初始化两次实例方法/属性，避免"),t("code",[s._v("继承组合")]),s._v("的缺点")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Cat(name) {\n  Animal.call(this);\n  this.name = name || 'Tom';\n}\n// 创建一个没有实例方法的类\nvar Super = function () { };\nSuper.prototype = Animal.prototype;\n//将实例作为子类的原型\nCat.prototype = new Super();\n\n// Test Code\nvar cat = new Cat();\nconsole.log(cat.name); // Tom\ncat.sleep() // Tom正在睡觉！\nconsole.log(cat instanceof Animal); // true\nconsole.log(cat instanceof Cat); //true\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("优点：")]),s._v(" "),t("ul",[t("li",[s._v("1、堪称完美 缺点：")]),s._v(" "),t("li",[s._v("1、实现复杂")])]),s._v(" "),t("h2",{attrs:{id:"_38、创建一个对象的方式有哪几种"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_38、创建一个对象的方式有哪几种"}},[s._v("#")]),s._v(" 38、创建一个对象的方式有哪几种？")]),s._v(" "),t("ul",[t("li",[s._v("new Object")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const obj = new Object()\nobj.name = 'Sunshine_Lin'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("字面量")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const obj = { name: 'Sunshin_Lin' }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("工厂模式")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function createObj(name) {\n  const obj = new Object()\n  obj.name = name\n  return obj\n}\nconst obj = createObj('Sunshine_Lin')\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("构造函数")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Person(name) {\n  this.name = name\n}\nconst person = new Person('Sunshine_Lin')\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_39、this-指向的四种情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_39、this-指向的四种情况"}},[s._v("#")]),s._v(" 39、this 指向的四种情况？")]),s._v(" "),t("ul",[t("li",[s._v("new 操作符")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Person(name) {\n  this.name = name\n  console.log(this)\n}\n// this指向当前person实例对象\nconst person = new Person('Sunshine_Lin')\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("指向 window")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function fn() {\n  console.log(this)\n}\nfn() // 浏览器window，node里global\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("对象调用方法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const target = {\n  fn: function () { console.log(this) }\n}\ntarget.fn() // target\n\n// 这种就是改变了this了\nconst fn = target.fn\nfn() // 浏览器window，node里global\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("箭头函数")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const obj = {\n  name: '林三心',\n  fn: () => {\n    console.log(this.name)\n  }\n}\nconsole.log(obj.fn()) // undefined\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[s._v("call、apply、bind 改变 this")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const obj1 = {\n  name: '林三心',\n  sayName: function() {\n    console.log(this.name)\n  }\n}\nconst obj2 = {\n  name: 'Sunshin_Lin'\n}\n// 改变sayName的this指向obj2\nobj1.sayName.call(obj2) // Sunshin_Lin\n// 改变sayName的this指向obj2\nobj1.sayName.apply(obj2) // Sunshin_Lin\n// 改变sayName的this指向obj2\nconst fn = obj1.sayName.bind(obj2)\nfn() // Sunshin_Lin\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"_40、数组的常用方法有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_40、数组的常用方法有哪些"}},[s._v("#")]),s._v(" 40、数组的常用方法有哪些？")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("方法")]),s._v(" "),t("th",[s._v("作用")]),s._v(" "),t("th",[s._v("是否影响原数组")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("push")]),s._v(" "),t("td",[s._v("在数组后添加元素，返回长度")]),s._v(" "),t("td",[s._v("✅")])]),s._v(" "),t("tr",[t("td",[s._v("pop")]),s._v(" "),t("td",[s._v("删除数组最后一项，返回被删项")]),s._v(" "),t("td",[s._v("✅")])]),s._v(" "),t("tr",[t("td",[s._v("shift")]),s._v(" "),t("td",[s._v("删除数组第一项，返回被删项")]),s._v(" "),t("td",[s._v("✅")])]),s._v(" "),t("tr",[t("td",[s._v("unshift")]),s._v(" "),t("td",[s._v("数组开头添加元素，返回长度")]),s._v(" "),t("td",[s._v("✅")])]),s._v(" "),t("tr",[t("td",[s._v("reserve")]),s._v(" "),t("td",[s._v("反转数组，返回数组")]),s._v(" "),t("td",[s._v("✅")])]),s._v(" "),t("tr",[t("td",[s._v("sort")]),s._v(" "),t("td",[s._v("排序数组，返回数组")]),s._v(" "),t("td",[s._v("✅")])]),s._v(" "),t("tr",[t("td",[s._v("splice")]),s._v(" "),t("td",[s._v("截取数组，返回被截取部分")]),s._v(" "),t("td",[s._v("✅")])]),s._v(" "),t("tr",[t("td",[s._v("join")]),s._v(" "),t("td",[s._v("将数组变字符串，返回字符串")]),s._v(" "),t("td",[s._v("❌")])]),s._v(" "),t("tr",[t("td",[s._v("concat")]),s._v(" "),t("td",[s._v("连接数组")]),s._v(" "),t("td",[s._v("❌")])]),s._v(" "),t("tr",[t("td",[s._v("map")]),s._v(" "),t("td",[s._v("相同规则处理数组项，返回新数组")]),s._v(" "),t("td",[s._v("❌")])]),s._v(" "),t("tr",[t("td",[s._v("forEach")]),s._v(" "),t("td",[s._v("遍历数组")]),s._v(" "),t("td",[s._v("❌")])]),s._v(" "),t("tr",[t("td",[s._v("filter")]),s._v(" "),t("td",[s._v("过滤数组项，返回符合条件的数组")]),s._v(" "),t("td",[s._v("❌")])]),s._v(" "),t("tr",[t("td",[s._v("every")]),s._v(" "),t("td",[s._v("每一项符合规则才返回 true")]),s._v(" "),t("td",[s._v("❌")])]),s._v(" "),t("tr",[t("td",[s._v("some")]),s._v(" "),t("td",[s._v("只要有一项符合规则就返回 true")]),s._v(" "),t("td",[s._v("❌")])]),s._v(" "),t("tr",[t("td",[s._v("reduce")]),s._v(" "),t("td",[s._v("接受上一个 return 和数组下一项")]),s._v(" "),t("td",[s._v("❌")])]),s._v(" "),t("tr",[t("td",[s._v("flat")]),s._v(" "),t("td",[s._v("数组扁平化")]),s._v(" "),t("td",[s._v("❌")])]),s._v(" "),t("tr",[t("td",[s._v("slice")]),s._v(" "),t("td",[s._v("截取数组，返回被截取区间")]),s._v(" "),t("td",[s._v("❌")])])])]),s._v(" "),t("h2",{attrs:{id:"_41、math-的常用方法有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_41、math-的常用方法有哪些"}},[s._v("#")]),s._v(" 41、Math 的常用方法有哪些？")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("方法")]),s._v(" "),t("th",[s._v("作用")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("Math.max(...arr)")]),s._v(" "),t("td",[s._v("取 arr 中的最大值")])]),s._v(" "),t("tr",[t("td",[s._v("Math.min(...arr)")]),s._v(" "),t("td",[s._v("取 arr 中的最小值")])]),s._v(" "),t("tr",[t("td",[s._v("Math.ceil(小数)")]),s._v(" "),t("td",[s._v("小数向上取整")])]),s._v(" "),t("tr",[t("td",[s._v("Math.floor(小数)")]),s._v(" "),t("td",[s._v("小数向下取整")])]),s._v(" "),t("tr",[t("td",[s._v("Math.round(小数)")]),s._v(" "),t("td",[s._v("小数四舍五入")])]),s._v(" "),t("tr",[t("td",[s._v("Math.sqrt(num)")]),s._v(" "),t("td",[s._v("对 num 进行开方")])]),s._v(" "),t("tr",[t("td",[s._v("Math.pow(num, m)")]),s._v(" "),t("td",[s._v("对 num 取 m 次幂")])]),s._v(" "),t("tr",[t("td",[s._v("Math.random() * num")]),s._v(" "),t("td",[s._v("取 0-num 的随机数")])])])]),s._v(" "),t("h2",{attrs:{id:"_42、哪些因素导致内存泄漏-如何解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_42、哪些因素导致内存泄漏-如何解决"}},[s._v("#")]),s._v(" 42、哪些因素导致内存泄漏？如何解决？")]),s._v(" "),t("p",[s._v("后面出一篇文章专门讲")]),s._v(" "),t("h2",{attrs:{id:"_43、讲讲-javascript-的垃圾回收机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_43、讲讲-javascript-的垃圾回收机制"}},[s._v("#")]),s._v(" 43、讲讲 JavaScript 的垃圾回收机制")]),s._v(" "),t("p",[s._v("看这篇文章")]),s._v(" "),t("p",[t("a",{attrs:{href:"http://mp.weixin.qq.com/s?__biz=Mzg2NjY2NTcyNg==&mid=2247483683&idx=1&sn=973b0280aa9c6eb1678ea530ee4d2381&chksm=ce4614b2f9319da402278b86e63f44e818e832ecbaafdada344ba979de3df4443a8ed53b0cb1&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[s._v("赠你 13 张图，助你 20 分钟打败了「V8 垃圾回收机制」！！！"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"_44、js-中有哪些不同类型的弹出框"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_44、js-中有哪些不同类型的弹出框"}},[s._v("#")]),s._v(" 44、JS 中有哪些不同类型的弹出框？")]),s._v(" "),t("p",[s._v("在 JS 中有三种类型的弹出框可用，分别是：")]),s._v(" "),t("ul",[t("li",[s._v("Alert")]),s._v(" "),t("li",[s._v("Confirm")]),s._v(" "),t("li",[s._v("Prompt")])]),s._v(" "),t("h2",{attrs:{id:"_45-如何将-js-日期转换为-iso-标准"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_45-如何将-js-日期转换为-iso-标准"}},[s._v("#")]),s._v(" 45. 如何将 JS 日期转换为 ISO 标准")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var date = new Date();\nvar n = date.toISOString();\nconsole.log(n);\n// YYYY-MM-DDTHH:mm:ss.sssZ\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_46、如何在-js-中编码和解码-url"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_46、如何在-js-中编码和解码-url"}},[s._v("#")]),s._v(" 46、如何在 JS 中编码和解码 URL")]),s._v(" "),t("ul",[t("li",[s._v("编码：encodeURI()")]),s._v(" "),t("li",[s._v("解码：decodeURI()")])]),s._v(" "),t("h2",{attrs:{id:"_47、什么是-bom-有哪些-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_47、什么是-bom-有哪些-api"}},[s._v("#")]),s._v(" 47、什么是 BOM？有哪些 api？")]),s._v(" "),t("p",[s._v("BOM 就是"),t("code",[s._v("browser object model")]),s._v("，"),t("code",[s._v("浏览器对象模型")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("api")]),s._v(" "),t("th",[s._v("作用")]),s._v(" "),t("th",[s._v("代表方法或属性")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("window.history")]),s._v(" "),t("td",[s._v("操纵浏览器的记录")]),s._v(" "),t("td",[s._v("history.back() history.go(-1)")])]),s._v(" "),t("tr",[t("td",[s._v("window.innerHeight")]),s._v(" "),t("td",[s._v("获取浏览器窗口的高度")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("window.innerWidth")]),s._v(" "),t("td",[s._v("获取浏览器窗口的宽度")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("window.location")]),s._v(" "),t("td",[s._v("操作刷新按钮和地址栏")]),s._v(" "),t("td",[s._v("location.host：获取域名和端口 location.hostname：获取主机名 location.port：获取端口号 location.pathname：获取 url 的路径 location.search：获取?开始的部分 location.href：获取整个 url location.hash：获取#开始的部分 location.origin：获取当前域名 location.navigator：获取当前浏览器信息")])])])]),s._v(" "),t("h2",{attrs:{id:"_48、bom-和-dom-的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_48、bom-和-dom-的关系"}},[s._v("#")]),s._v(" 48、BOM 和 DOM 的关系")]),s._v(" "),t("p",[t("strong",[s._v("BOM")]),s._v("全称 Browser Object Model，即浏览器对象模型，主要处理浏览器窗口和框架。")]),s._v(" "),t("p",[s._v("DOM 全称 Document Object Model，即文档对象模型，是 HTML 和 XML 的应用程序接口（API），遵循 W3C 的标准，所有浏览器公共遵守的标准。")]),s._v(" "),t("p",[s._v("JS 是通过访问"),t("strong",[s._v("BOM")]),s._v("（Browser Object Model）对象来访问、控制、修改客户端(浏览器)，由于"),t("strong",[s._v("BOM")]),s._v("的 window 包含了 document，window 对象的属性和方法是直接可以使用而且被感知的，因此可以直接使用 window 对象的 document 属性，通过 document 属性就可以访问、检索、修改 XHTML 文档内容与结构。因为 document 对象又是 DOM 的根节点。")]),s._v(" "),t("p",[s._v("可以说，BOM 包含了 DOM(对象)，浏览器提供出来给予访问的是 BOM 对象，从 BOM 对象再访问到 DOM 对象，从而 js 可以操作浏览器以及浏览器读取到的文档。")]),s._v(" "),t("h2",{attrs:{id:"_49、js-中的-substr-和-substring-函数有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_49、js-中的-substr-和-substring-函数有什么区别"}},[s._v("#")]),s._v(" 49、JS 中的 substr()和 substring()函数有什么区别")]),s._v(" "),t("p",[s._v("substr() 函数的形式为 substr(startIndex,length)。它从 startIndex 返回子字符串并返回'length'个字符数。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('var s = "hello";\n( s.substr(1,4) == "ello" ) // true\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("substring() 函数的形式为 substring(startIndex,endIndex)。它返回从 startIndex 到 endIndex - 1 的子字符串。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('var s = "hello";\n( s.substring(1,4) == "ell" ) // true\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_50、解释一下-use-strict"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_50、解释一下-use-strict"}},[s._v("#")]),s._v(' 50、解释一下 "use strict" ?')]),s._v(" "),t("p",[s._v("“use strict”是 Es5 中引入的 js 指令。使用“use strict”指令的目的是强制执行严格模式下的代码。在严格模式下，咱们不能在不声明变量的情况下使用变量。早期版本的 js 忽略了“use strict”。")])])}),[],!1,null,null,null);a.default=e.exports}}]);