(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{602:function(e,s,a){e.exports=a.p+"assets/img/Vue_knowledge1.18dc1911.png"},603:function(e,s,a){e.exports=a.p+"assets/img/Vue_knowledge2.ff91e5af.png"},604:function(e,s,a){e.exports=a.p+"assets/img/Vue_knowledge3.3353bd68.png"},605:function(e,s,a){e.exports=a.p+"assets/img/Vue_knowledge4.f9f68eeb.png"},606:function(e,s,a){e.exports=a.p+"assets/img/Vue_knowledge5.edd6f557.png"},636:function(e,s,a){"use strict";a.r(s);var t=a(6),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"_1、vue-的优点-vue-的缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、vue-的优点-vue-的缺点"}},[e._v("#")]),e._v(" 1、Vue 的优点？Vue 的缺点？")]),e._v(" "),t("p",[t("strong",[e._v("优点：")])]),e._v(" "),t("ul",[t("li",[e._v("渐进式")]),e._v(" "),t("li",[e._v("组件化开发")]),e._v(" "),t("li",[e._v("虚拟 dom")]),e._v(" "),t("li",[e._v("响应式数据")]),e._v(" "),t("li",[e._v("单页面路由")]),e._v(" "),t("li",[e._v("数据与视图分开")])]),e._v(" "),t("p",[t("strong",[e._v("缺点：")])]),e._v(" "),t("ul",[t("li",[e._v("单页面不利于 seo")]),e._v(" "),t("li",[e._v("不兼容 IE")]),e._v(" "),t("li",[e._v("首屏加载时间长")])]),e._v(" "),t("h2",{attrs:{id:"_2、为什么说-vue-是一个渐进式框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、为什么说-vue-是一个渐进式框架"}},[e._v("#")]),e._v(" 2、为什么说 Vue 是一个渐进式框架？")]),e._v(" "),t("p",[e._v("Vue 的全家桶，你可以选择不用，或者只选几样去用，比如不用 vuex")]),e._v(" "),t("p",[t("img",{attrs:{src:a(602),alt:"图片"}})]),e._v(" "),t("h2",{attrs:{id:"_3、vue-跟-react-的异同点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、vue-跟-react-的异同点"}},[e._v("#")]),e._v(" 3、Vue 跟 React 的异同点？")]),e._v(" "),t("p",[t("strong",[e._v("相同点：")])]),e._v(" "),t("ul",[t("li",[e._v("都是单向数据流")]),e._v(" "),t("li",[e._v("都使用了虚拟 DOM 的技术")]),e._v(" "),t("li",[e._v("都支持 SSR")]),e._v(" "),t("li",[e._v("组件化开发")])]),e._v(" "),t("p",[t("strong",[e._v("不同点：")])]),e._v(" "),t("ul",[t("li",[e._v("前者 template，后者 JSX")]),e._v(" "),t("li",[e._v("数据改变，前者响应式，后者手动 setState")]),e._v(" "),t("li",[e._v("React 单向绑定，Vue 双向绑定")]),e._v(" "),t("li",[e._v("React 状态管理工具 Redux、Mobx，Vue 状态管理工具 Vuex")])]),e._v(" "),t("h2",{attrs:{id:"_4、mvvm-是什么-和-mvc-有何区别呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、mvvm-是什么-和-mvc-有何区别呢"}},[e._v("#")]),e._v(" 4、MVVM 是什么？和 MVC 有何区别呢？")]),e._v(" "),t("p",[t("strong",[e._v("MVC")])]),e._v(" "),t("ul",[t("li",[e._v("Model：负责从数据库中取数据")]),e._v(" "),t("li",[e._v("View：负责展示数据")]),e._v(" "),t("li",[e._v("Controller：用户交互的地方，例如点击事件")]),e._v(" "),t("li",[e._v("思想：Controller 将 Model 的数据展示在 View 上")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(603),alt:"图片"}})]),e._v(" "),t("p",[t("strong",[e._v("MVVM")])]),e._v(" "),t("ul",[t("li",[e._v("VM：就是 View-Model，数据双向绑定")]),e._v(" "),t("li",[e._v("Model：取数据的地方")]),e._v(" "),t("li",[e._v("View：展示数据的地方")]),e._v(" "),t("li",[e._v("思想：View 和 Model 实现数据同步，不需要手动更新")])]),e._v(" "),t("blockquote",[t("p",[e._v("注意：Vue 不严格符合 MVVM，因为 MVVM 规定 Model 和 View 不能直接通信，而 Vue 可以使用"),t("code",[e._v("ref")]),e._v("进行通信")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(604),alt:"图片"}})]),e._v(" "),t("h2",{attrs:{id:"_5、vue-和-jquery-的区别在哪-为什么放弃-jquery-用-vue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、vue-和-jquery-的区别在哪-为什么放弃-jquery-用-vue"}},[e._v("#")]),e._v(" 5、Vue 和 JQuery 的区别在哪？为什么放弃 JQuery 用 Vue？")]),e._v(" "),t("ul",[t("li",[e._v("JQuery 直接操作 DOM，而 Vue 不直接操作 DOM，而是只需操作数据")]),e._v(" "),t("li",[e._v("Vue 的虚拟 DOM 技术，能适配多端")]),e._v(" "),t("li",[e._v("Vue 集成了一些库，大大提高开发效率，例如 Route、Vuex 等等")])]),e._v(" "),t("h2",{attrs:{id:"_6、为什么-data-是个函数并且返回一个对象呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、为什么-data-是个函数并且返回一个对象呢"}},[e._v("#")]),e._v(" 6、为什么 data 是个函数并且返回一个对象呢？")]),e._v(" "),t("p",[e._v("防止组件被多个页面使用时，造成的变量互相污染")]),e._v(" "),t("h2",{attrs:{id:"_7、使用过哪些-vue-的修饰符呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、使用过哪些-vue-的修饰符呢"}},[e._v("#")]),e._v(" 7、使用过哪些 Vue 的修饰符呢？")]),e._v(" "),t("ul",[t("li",[t("code",[e._v(".lazy")]),e._v("：输入框失焦时才会更新 v-model 的值")]),e._v(" "),t("li",[t("code",[e._v(".trim")]),e._v("：讲 v-model 绑定的值首位空格给去掉")]),e._v(" "),t("li",[t("code",[e._v(".number")]),e._v("：将 v-medol 绑定的值转数字")]),e._v(" "),t("li",[t("code",[e._v(".stop")]),e._v("：阻止事件冒泡")]),e._v(" "),t("li",[t("code",[e._v(".capture")]),e._v("：事件的捕获")]),e._v(" "),t("li",[t("code",[e._v(".self")]),e._v("：点击事件绑定本身才触发")]),e._v(" "),t("li",[t("code",[e._v(".once")]),e._v("：事件只触发一次")]),e._v(" "),t("li",[t("code",[e._v(".prevent")]),e._v("：阻止默认事件")]),e._v(" "),t("li",[t("code",[e._v(".native")]),e._v("：绑定事件在自定义组件上时，确保能执行")]),e._v(" "),t("li",[t("code",[e._v(".left、.middle、.right")]),e._v("：鼠标左中右键的触发")]),e._v(" "),t("li",[t("code",[e._v("passive")]),e._v("：相当于给移动端滚动事件加一个"),t("code",[e._v(".lazy")])]),e._v(" "),t("li",[t("code",[e._v("camel")]),e._v("：确保变量名会被识别成驼峰命名")]),e._v(" "),t("li",[t("code",[e._v(".sync")]),e._v("：简化子修改父值的步骤")])]),e._v(" "),t("h2",{attrs:{id:"_8、路由的几种模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、路由的几种模式"}},[e._v("#")]),e._v(" 8、路由的几种模式？")]),e._v(" "),t("ul",[t("li",[e._v("hash：哈希模式，根据 hash 值的更改进行组件切换，而不刷新页面")]),e._v(" "),t("li",[e._v("history：历史模式，依赖于 HTML5 的 pushState 和 replaceState")]),e._v(" "),t("li",[e._v("abstract：适用于 Node")])]),e._v(" "),t("h2",{attrs:{id:"_9、路由的钩子函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、路由的钩子函数"}},[e._v("#")]),e._v(" 9、路由的钩子函数？")]),e._v(" "),t("p",[t("strong",[e._v("全局钩子")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("beforeEach：跳转路由前")])]),e._v(" "),t("li",[t("ul",[t("li",[e._v("to：将要跳转进入的路由对象")]),e._v(" "),t("li",[e._v("from：将要离开的路由对象")]),e._v(" "),t("li",[e._v("next：执行跳转的方法")])])]),e._v(" "),t("li",[t("p",[e._v("afterEach：路由跳转后")])]),e._v(" "),t("li",[t("ul",[t("li",[e._v("to：将要跳转进入的路由对象")])])])]),e._v(" "),t("p",[t("strong",[e._v("路由独享钩子")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("routes: [\n  {\n    path: '/xxx',\n    component: xxx,\n    beforeEnter: (to, from, next) => {\n\n    }\n  }\n]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("p",[t("strong",[e._v("组件内路由钩子")])]),e._v(" "),t("ul",[t("li",[e._v("beforeRouteEnter(to, from, next)：跳转路由渲染组件时触发")]),e._v(" "),t("li",[e._v("beforeRouteUpdate(to, from, next)：跳转路由且组件被复用时触发")]),e._v(" "),t("li",[e._v("beforeRouteLeave(to, from, next)：跳转路由且离开组件时触发")])]),e._v(" "),t("h2",{attrs:{id:"_10、使用过哪些-vue-的内部指令呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10、使用过哪些-vue-的内部指令呢"}},[e._v("#")]),e._v(" 10、使用过哪些 Vue 的内部指令呢？")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("v-text")]),e._v("：元素的 textContent")]),e._v(" "),t("li",[t("code",[e._v("v-html")]),e._v("：元素的 innerHTML")]),e._v(" "),t("li",[t("code",[e._v("v-show")]),e._v("：通过样式 display 改变显隐")]),e._v(" "),t("li",[t("code",[e._v("v-if")]),e._v("：通过操作 DOM 改变显隐")]),e._v(" "),t("li",[t("code",[e._v("v-else")]),e._v("：配合 v-if")]),e._v(" "),t("li",[t("code",[e._v("v-else-id")]),e._v("：配合 v-else")]),e._v(" "),t("li",[t("code",[e._v("v-for")]),e._v("：循环渲染")]),e._v(" "),t("li",[t("code",[e._v("v-on")]),e._v("：绑定事件，缩写@")]),e._v(" "),t("li",[t("code",[e._v("v-bind")]),e._v("：绑定变量，缩写:")]),e._v(" "),t("li",[t("code",[e._v("v-model")]),e._v("：双向绑定")]),e._v(" "),t("li",[t("code",[e._v("v-slot")]),e._v("：插槽")]),e._v(" "),t("li",[t("code",[e._v("v-once")]),e._v("：只渲染一次")]),e._v(" "),t("li",[t("code",[e._v("v-pre")]),e._v("：跳过元素编译")]),e._v(" "),t("li",[t("code",[e._v("v-cloak")]),e._v("：隐藏双括号，有值再显示")])]),e._v(" "),t("h2",{attrs:{id:"_11、组件之间的传值方式有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11、组件之间的传值方式有哪些"}},[e._v("#")]),e._v(" 11、组件之间的传值方式有哪些？")]),e._v(" "),t("ul",[t("li",[e._v("父传子，子组件通过"),t("code",[e._v("props")]),e._v("接收")]),e._v(" "),t("li",[e._v("子传父，子组件使用"),t("code",[e._v("$emit")]),e._v("对父组件进行传值")]),e._v(" "),t("li",[e._v("父子之间通过"),t("code",[e._v("$parent")]),e._v("和"),t("code",[e._v("$chidren")]),e._v("获取实例进而通信")]),e._v(" "),t("li",[e._v("通过"),t("code",[e._v("vuex")]),e._v("进行状态管理")]),e._v(" "),t("li",[e._v("通过"),t("code",[e._v("eventBus")]),e._v("进行跨组件值传递")]),e._v(" "),t("li",[t("code",[e._v("provide")]),e._v("和"),t("code",[e._v("inject")]),e._v("，官方不建议使用")]),e._v(" "),t("li",[t("code",[e._v("$ref")]),e._v("获取实例，进而传值")]),e._v(" "),t("li",[e._v("路由传值")]),e._v(" "),t("li",[e._v("localStorage、sessionStorage")])]),e._v(" "),t("h2",{attrs:{id:"_12、如何设置动态-class-动态-style"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12、如何设置动态-class-动态-style"}},[e._v("#")]),e._v(" 12、如何设置动态 class，动态 style？")]),e._v(" "),t("ul",[t("li",[e._v("动态 class 对象："),t("code",[e._v("<div :class=\"{ 'is-active': true, 'red': isRed }\"></div>")])]),e._v(" "),t("li",[e._v("动态 class 数组："),t("code",[e._v("<div :class=\"['is-active', isRed ? 'red' : '' ]\"></div>")])]),e._v(" "),t("li",[e._v("动态 style 对象："),t("code",[e._v("<div :style=\"{ color: textColor, fontSize: '18px' }\"></div>")])]),e._v(" "),t("li",[e._v("动态 style 数组：`")])]),e._v(" "),t("h2",{attrs:{id:"_13、v-if-和-v-show-有何区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13、v-if-和-v-show-有何区别"}},[e._v("#")]),e._v(" 13、v-if 和 v-show 有何区别？")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("v-if")]),e._v("：通过操作 DOM 来控制显隐，适用于偶尔显隐的情况")]),e._v(" "),t("li",[t("code",[e._v("v-show")]),e._v("：通过改变样式 display 属性控制显隐，适用于频繁显隐的情况")])]),e._v(" "),t("h2",{attrs:{id:"_14、computed-和-watch-有何区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14、computed-和-watch-有何区别"}},[e._v("#")]),e._v(" 14、computed 和 watch 有何区别？")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("computed")]),e._v("：依赖多个变量计算出一个变量，且具有缓存机制，依赖值不变的情况下，会复用计算值。"),t("code",[e._v("computed")]),e._v("中不能进行异步操作")]),e._v(" "),t("li",[t("code",[e._v("watch")]),e._v("：通常监听一个变量的变化，而去做一些事，可异步操作")]),e._v(" "),t("li",[e._v("简单记就是：一般情况下"),t("code",[e._v("computed")]),e._v("的多对一，"),t("code",[e._v("watch")]),e._v("一对多")])]),e._v(" "),t("h2",{attrs:{id:"_15、vue-的生命周期-讲一讲"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15、vue-的生命周期-讲一讲"}},[e._v("#")]),e._v(" 15、Vue 的生命周期，讲一讲？")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("beforeCreate")]),e._v("：实例 Vue，未初始化和响应式数据")]),e._v(" "),t("li",[t("code",[e._v("created")]),e._v("：已初始化和响应式数据，可访问数据")]),e._v(" "),t("li",[t("code",[e._v("beforeMount")]),e._v("：render 调用，虚拟 DOM 生成，未转真实 DOM")]),e._v(" "),t("li",[t("code",[e._v("mounted")]),e._v("：真实 DOM 挂载完成")]),e._v(" "),t("li",[t("code",[e._v("beforeUpdate")]),e._v("：数据更新，新虚拟 DOM 生成")]),e._v(" "),t("li",[t("code",[e._v("updated")]),e._v("：新旧虚拟 DOM 进行对比，打补丁，然后进行真实 DOM 更新")]),e._v(" "),t("li",[t("code",[e._v("beforeDestroy")]),e._v("：实例销毁前，仍可访问数据")]),e._v(" "),t("li",[t("code",[e._v("destroy")]),e._v("：实例销毁，子实例销毁，指令解绑，解绑本实例的事件")]),e._v(" "),t("li",[t("code",[e._v("activated")]),e._v("：keep-alive 所缓存组件激活时调用")]),e._v(" "),t("li",[t("code",[e._v("deactivated")]),e._v("：keep-alive 所缓存组件停用时调用")]),e._v(" "),t("li",[t("code",[e._v("errorCaptured")]),e._v("：子孙组件的错误捕获，此函数可返回 false 阻止继续向上传播")])]),e._v(" "),t("h2",{attrs:{id:"_16、为什么-v-if-和-v-for-不建议用在同一标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16、为什么-v-if-和-v-for-不建议用在同一标签"}},[e._v("#")]),e._v(" 16、为什么 v-if 和 v-for 不建议用在同一标签？")]),e._v(" "),t("p",[t("code",[e._v("v-for")]),e._v("优先级高于"),t("code",[e._v("v-if")]),e._v("，每项都通过"),t("code",[e._v("v-for")]),e._v("渲染出来后再去通过"),t("code",[e._v("v-if")]),e._v("判断显隐，做了很多无用功")]),e._v(" "),t("h2",{attrs:{id:"_17、-vuex-的有哪些属性-用处是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17、-vuex-的有哪些属性-用处是什么"}},[e._v("#")]),e._v(" 17、 vuex 的有哪些属性？用处是什么？")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("state")]),e._v("：定义初始状态")]),e._v(" "),t("li",[t("code",[e._v("getter")]),e._v("：从 store 从取数据")]),e._v(" "),t("li",[t("code",[e._v("mutation")]),e._v("：更改 store 中状态，只能同步操作")]),e._v(" "),t("li",[t("code",[e._v("action")]),e._v("：用于提交 mutation，而不直接更改状态，可异步操作")]),e._v(" "),t("li",[t("code",[e._v("module")]),e._v("：store 的模块拆分")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(605),alt:"图片"}})]),e._v(" "),t("h2",{attrs:{id:"_18、不需要响应式的数据应该怎么处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18、不需要响应式的数据应该怎么处理"}},[e._v("#")]),e._v(" 18、不需要响应式的数据应该怎么处理？")]),e._v(" "),t("ul",[t("li",[e._v("定义在 data 的 return 之外")]),e._v(" "),t("li",[e._v("使用 Object.freeze 进行数据冻结")])]),e._v(" "),t("h2",{attrs:{id:"_19、watch-有哪些属性-分别有什么用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19、watch-有哪些属性-分别有什么用"}},[e._v("#")]),e._v(" 19、watch 有哪些属性，分别有什么用？")]),e._v(" "),t("ul",[t("li",[e._v("immediate：初次加载时立即执行")]),e._v(" "),t("li",[e._v("deep：是否进行深度监听")]),e._v(" "),t("li",[e._v("handler：监听的回调函数")])]),e._v(" "),t("h2",{attrs:{id:"_20、父子组件生命周期顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20、父子组件生命周期顺序"}},[e._v("#")]),e._v(" 20、父子组件生命周期顺序？")]),e._v(" "),t("p",[e._v("父 beforeCreate -> 父 created -> 父 beforeMount -> 子 beforeCreate -> 子 created -> 子 beforeMount -> 子 mounted -> 父 mounted")]),e._v(" "),t("h2",{attrs:{id:"_21、对象新属性无法更新视图-删除属性无法更新视图-为什么-怎么办"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21、对象新属性无法更新视图-删除属性无法更新视图-为什么-怎么办"}},[e._v("#")]),e._v(" 21、对象新属性无法更新视图，删除属性无法更新视图，为什么？怎么办？")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("原因：Object.defineProperty 没有对对象的新属性进行劫持")])]),e._v(" "),t("li",[t("p",[e._v("解决：")])]),e._v(" "),t("li",[t("ul",[t("li",[e._v("新增属性："),t("code",[e._v("Vue.set(target, key, value)")])]),e._v(" "),t("li",[e._v("删除属性："),t("code",[e._v("Vue.delete(target, key)")])])])])]),e._v(" "),t("h2",{attrs:{id:"_22、直接-arr-index-xxx-无法更新视图怎么办-为什么-怎么办"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22、直接-arr-index-xxx-无法更新视图怎么办-为什么-怎么办"}},[e._v("#")]),e._v(" 22、直接 arr[index] = xxx 无法更新视图怎么办？为什么？怎么办？")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("原因：Vue 出于性能考虑没有对数组下标进行劫持，而是通过改写数组原型方法")])]),e._v(" "),t("li",[t("p",[e._v("解决：")])]),e._v(" "),t("li",[t("ul",[t("li",[t("code",[e._v("splice：arr.splice(index, 1, value)")])]),e._v(" "),t("li",[t("code",[e._v("Vue.set(target, index, value)")])])])])]),e._v(" "),t("h2",{attrs:{id:"_23、插槽的使用以及原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23、插槽的使用以及原理"}},[e._v("#")]),e._v(" 23、插槽的使用以及原理？")]),e._v(" "),t("blockquote",[t("p",[e._v("具体：https://juejin.cn/post/6949848530781470733")])]),e._v(" "),t("p",[t("strong",[e._v("普通插槽")]),e._v(" 普通插槽"),t("code",[e._v("slot")]),e._v("会被当做子元素进行解析，最终会被解析成一个"),t("code",[e._v("_t")]),e._v("函数，他接收的第一个参数为插槽的名称，默认是"),t("code",[e._v("default")]),e._v("，也就是"),t("code",[e._v("_t('default')")]),e._v("，执行此函数进行最终元素的渲染，如果是具名插槽，则传对应的插槽名 "),t("strong",[e._v("作用域插槽")]),e._v(" 插槽会被封装成一个函数放置在"),t("code",[e._v("scopeSlotes")]),e._v("对象中，解析时"),t("code",[e._v("_t")]),e._v("第二个参数接收子组件的数据，并进行渲染")]),e._v(" "),t("h2",{attrs:{id:"_24、为什么不建议用-index-做-key-为什么不建议用随机数做-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_24、为什么不建议用-index-做-key-为什么不建议用随机数做-key"}},[e._v("#")]),e._v(" 24、为什么不建议用 index 做 key，为什么不建议用随机数做 key？")]),e._v(" "),t("p",[e._v("举个例子：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<div v-for="(item, index) in list" :key="index">{{item.name}}</div>\n\nlist: [\n    { name: \'小明\', id: \'123\' },\n    { name: \'小红\', id: \'124\' },\n    { name: \'小花\', id: \'125\' }\n]\n\n渲染为\n<div key="0">小明</div>\n<div key="1">小红</div>\n<div key="2">小花</div>\n\n现在我执行 list.unshift({ name: \'小林\', id: \'122\' })\n\n渲染为\n<div key="0">小林</div>\n<div key="1">小明</div>\n<div key="2">小红</div>\n<div key="3">小花</div>\n\n\n新旧对比\n\n<div key="0">小明</div>  <div key="0">小林</div>\n<div key="1">小红</div>  <div key="1">小明</div>\n<div key="2">小花</div>  <div key="2">小红</div>\n                         <div key="3">小花</div>\n\n可以看出，如果用index做key的话，其实是更新了原有的三项，并新增了小花，虽然达到了渲染目的，但是损耗性能\n\n现在我们使用id来做key，渲染为\n\n<div key="123">小明</div>\n<div key="124">小红</div>\n<div key="125">小花</div>\n\n现在我执行 list.unshift({ name: \'小林\', id: \'122\' })，渲染为\n\n<div key="122">小林</div>\n<div key="123">小明</div>\n<div key="124">小红</div>\n<div key="125">小花</div>\n\n新旧对比\n\n                           <div key="122">小林</div>\n<div key="123">小明</div>  <div key="123">小明</div>\n<div key="124">小红</div>  <div key="124">小红</div>\n<div key="125">小花</div>  <div key="125">小花</div>\n\n可以看出，原有的三项都不变，只是新增了小林这个人，这才是最理想的结果\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br"),t("span",{staticClass:"line-number"},[e._v("36")]),t("br"),t("span",{staticClass:"line-number"},[e._v("37")]),t("br"),t("span",{staticClass:"line-number"},[e._v("38")]),t("br"),t("span",{staticClass:"line-number"},[e._v("39")]),t("br"),t("span",{staticClass:"line-number"},[e._v("40")]),t("br"),t("span",{staticClass:"line-number"},[e._v("41")]),t("br"),t("span",{staticClass:"line-number"},[e._v("42")]),t("br"),t("span",{staticClass:"line-number"},[e._v("43")]),t("br"),t("span",{staticClass:"line-number"},[e._v("44")]),t("br"),t("span",{staticClass:"line-number"},[e._v("45")]),t("br"),t("span",{staticClass:"line-number"},[e._v("46")]),t("br"),t("span",{staticClass:"line-number"},[e._v("47")]),t("br"),t("span",{staticClass:"line-number"},[e._v("48")]),t("br"),t("span",{staticClass:"line-number"},[e._v("49")]),t("br"),t("span",{staticClass:"line-number"},[e._v("50")]),t("br"),t("span",{staticClass:"line-number"},[e._v("51")]),t("br"),t("span",{staticClass:"line-number"},[e._v("52")]),t("br")])]),t("p",[e._v("用"),t("code",[e._v("index")]),e._v("和用"),t("code",[e._v("随机数")]),e._v("都是同理，"),t("code",[e._v("随机数")]),e._v("每次都在变，做不到专一性，很"),t("code",[e._v("渣男")]),e._v("，也很消耗性能，所以，拒绝"),t("code",[e._v("渣男")]),e._v("，选择"),t("code",[e._v("老实人")])]),e._v(" "),t("h2",{attrs:{id:"_25、自定义指令的钩子函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_25、自定义指令的钩子函数"}},[e._v("#")]),e._v(" 25、自定义指令的钩子函数？")]),e._v(" "),t("p",[e._v("这里只说 Vue2 的")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("bind")]),e._v("：指令绑定到指定元素时调用，只调用一次")]),e._v(" "),t("li",[t("code",[e._v("inserted")]),e._v("：指定元素插入父节点时调用")]),e._v(" "),t("li",[t("code",[e._v("update")]),e._v("：所在组件的 VNode 更新时调用")]),e._v(" "),t("li",[t("code",[e._v("componnetUpdated")]),e._v("：所在组件以及其子组件 VNode 全部更新后调用")]),e._v(" "),t("li",[t("code",[e._v("unbind")]),e._v("：只调用一次，指令与元素解绑时调用")])]),e._v(" "),t("h2",{attrs:{id:"_26、说说-nexttick-的用处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_26、说说-nexttick-的用处"}},[e._v("#")]),e._v(" 26、说说 nextTick 的用处？")]),e._v(" "),t("p",[e._v("修改数据时不能马上得到最新的 DOM 信息，所以需要使用 nextTick，在 nectTick 回调中可以获取最新 DOM 信息")]),e._v(" "),t("h2",{attrs:{id:"_27、为什么-nexttick-优先是微任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_27、为什么-nexttick-优先是微任务"}},[e._v("#")]),e._v(" 27、为什么 nextTick 优先是微任务？")]),e._v(" "),t("p",[e._v("优先是"),t("code",[e._v("Promise.then")]),e._v("方法，是个微任务，这样可以避免多一次队列，进而少一次 UI 渲染，节省性能")]),e._v(" "),t("h2",{attrs:{id:"_28、vue-的-ssr-是什么-有什么好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_28、vue-的-ssr-是什么-有什么好处"}},[e._v("#")]),e._v(" 28、Vue 的 SSR 是什么？有什么好处？")]),e._v(" "),t("p",[e._v("SSR 全称"),t("code",[e._v("Server Side Render")])]),e._v(" "),t("ul",[t("li",[e._v("有利于 SEO：由于是在服务端，将数据填充进 HTML 之后再推送到浏览器，所以有利于 SEO 的爬取")]),e._v(" "),t("li",[e._v("首屏渲染快")])]),e._v(" "),t("h2",{attrs:{id:"_29、vue-响应式是怎么实现的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_29、vue-响应式是怎么实现的"}},[e._v("#")]),e._v(" 29、Vue 响应式是怎么实现的？")]),e._v(" "),t("ul",[t("li",[e._v("1、劫持：通过"),t("code",[e._v("Object.defineProperty")]),e._v("对对象进行递归劫持属性的"),t("code",[e._v("get、set")])]),e._v(" "),t("li",[e._v("2、观察者模式：使用"),t("code",[e._v("watcher")]),e._v("进行观察数据使用的地方")]),e._v(" "),t("li",[e._v("3、发布订阅模式：使用"),t("code",[e._v("dep")]),e._v("收集"),t("code",[e._v("watcher")]),e._v("，数据更改时，通过"),t("code",[e._v("notify")]),e._v("方法通知"),t("code",[e._v("dep")]),e._v("里的"),t("code",[e._v("watcher")]),e._v("去进行相应的更新")]),e._v(" "),t("li",[e._v("4、数组：数组没有使用劫持的模式，而是通过重写数组原型上的方法，来实现数组的响应式")])]),e._v(" "),t("h2",{attrs:{id:"_30、为什么只对对象劫持-而要对数组进行方法重写"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_30、为什么只对对象劫持-而要对数组进行方法重写"}},[e._v("#")]),e._v(" 30、为什么只对对象劫持，而要对数组进行方法重写？")]),e._v(" "),t("p",[e._v("数组的元素大概率是成百上千的，所以对数组下标进行劫持的话会非常消耗性能。Vue 通过对数组原型上方法的重写，实现数组的响应式")]),e._v(" "),t("h2",{attrs:{id:"_31、vue-的模板编译原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_31、vue-的模板编译原理"}},[e._v("#")]),e._v(" 31、Vue 的模板编译原理？")]),e._v(" "),t("blockquote",[t("p",[e._v("具体：https://juejin.cn/post/6969563640416436232")])]),e._v(" "),t("h2",{attrs:{id:"_32、vue-的-computed-和-watch-的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_32、vue-的-computed-和-watch-的原理"}},[e._v("#")]),e._v(" 32、Vue 的 computed 和 watch 的原理？")]),e._v(" "),t("blockquote",[t("p",[e._v("具体：https://juejin.cn/post/6974293549135167495")])]),e._v(" "),t("h2",{attrs:{id:"_33、vue-set-方法的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_33、vue-set-方法的原理"}},[e._v("#")]),e._v(" 33、Vue.set 方法的原理？")]),e._v(" "),t("p",[e._v("Vue.set(target, key, value)")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("第一步：判断 target 是数组的话，则调用 target.splice(key, 1, value)")])]),e._v(" "),t("li",[t("p",[e._v("第二步：判断 target 是对象的话，再判断传入的 key 是否已存在 target 中")])]),e._v(" "),t("li",[t("ul",[t("li",[e._v("是：直接 target[key] = value")]),e._v(" "),t("li",[e._v("否：调用 defineReactive(target, key, val)进行响应式处理")])])])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export default function set(target, key, val) {\n    if (Array.isArray(target)) {\n        target.length = Math.max(target.length, key)\n        target.splice(key, 1, val)\n        return val\n    }\n\n    const ob = target.__ob__\n\n    if (key in target && !(key in target.prototype) || !ob) {\n        target[key] = val\n        return val\n    }\n\n    defineReactive(target, key, val)\n    return val\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("h2",{attrs:{id:"_34、vue-delete-方法的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_34、vue-delete-方法的原理"}},[e._v("#")]),e._v(" 34、Vue.delete 方法的原理？")]),e._v(" "),t("p",[e._v("Vue.delete(target, key)")]),e._v(" "),t("ul",[t("li",[e._v("第一步：判断 target 是否为数组，是的话调用 target.splice(key, 1)")]),e._v(" "),t("li",[e._v("第二步：判断 target 是对象的话，调用 delete 关键字删除属性，并调用"),t("strong",[e._v("ob")]),e._v(".dep.notify 进行更新通知")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export default function del (target, key) {\n    if (Array.isArray(target)) {\n        target.splice(key, 1)\n        return\n    }\n\n    const ob = target.__ob__\n\n    if (!(key in target)) return\n\n    delete target[key]\n\n    if (!ob) return\n\n    ob.dep.notify()\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("h2",{attrs:{id:"_35、nexttick-的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_35、nexttick-的原理"}},[e._v("#")]),e._v(" 35、nextTick 的原理？")]),e._v(" "),t("p",[e._v("维护一个数组，每次调用时讲回调函数压入这个数组，然后优先选择微任务，在微任务回调中去执行数组中的所有回调，同时维护一个布尔值，确保每一次队列进行一次执行数组所有回调")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('let callbacks = []; //回调函数\nlet pending = false;\nfunction flushCallbacks() {\n  pending = false; //把标志还原为false\n  // 依次执行回调\n  for (let i = 0; i < callbacks.length; i++) {\n    callbacks[i]();\n  }\n}\nlet timerFunc; //先采用微任务并按照优先级优雅降级的方式实现异步刷新\nif (typeof Promise !== "undefined") {\n  // 如果支持promise\n  const p = Promise.resolve();\n  timerFunc = () => {\n    p.then(flushCallbacks);\n  };\n} else if (typeof MutationObserver !== "undefined") {\n  // MutationObserver 主要是监听dom变化 也是一个异步方法\n  let counter = 1;\n  const observer = new MutationObserver(flushCallbacks);\n  const textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true,\n  });\n  timerFunc = () => {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n} else if (typeof setImmediate !== "undefined") {\n  // 如果前面都不支持 判断setImmediate\n  timerFunc = () => {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // 最后降级采用setTimeout\n  timerFunc = () => {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nexport function nextTick(cb) {\n  callbacks.push(cb);\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br"),t("span",{staticClass:"line-number"},[e._v("36")]),t("br"),t("span",{staticClass:"line-number"},[e._v("37")]),t("br"),t("span",{staticClass:"line-number"},[e._v("38")]),t("br"),t("span",{staticClass:"line-number"},[e._v("39")]),t("br"),t("span",{staticClass:"line-number"},[e._v("40")]),t("br"),t("span",{staticClass:"line-number"},[e._v("41")]),t("br"),t("span",{staticClass:"line-number"},[e._v("42")]),t("br"),t("span",{staticClass:"line-number"},[e._v("43")]),t("br"),t("span",{staticClass:"line-number"},[e._v("44")]),t("br"),t("span",{staticClass:"line-number"},[e._v("45")]),t("br"),t("span",{staticClass:"line-number"},[e._v("46")]),t("br"),t("span",{staticClass:"line-number"},[e._v("47")]),t("br")])]),t("h2",{attrs:{id:"_36、说说-虚拟-dom-和-diff-算法-吧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_36、说说-虚拟-dom-和-diff-算法-吧"}},[e._v("#")]),e._v(" 36、说说 虚拟 dom 和 diff 算法 吧？")]),e._v(" "),t("p",[t("strong",[e._v("虚拟 dom")])]),e._v(" "),t("p",[e._v("虚拟 dom 是一个对象，一个描述真实 DOM 的对象，每次数据更新时，新旧虚拟 DOM 都会互相进行同层对比，而 diff 算法优化就是在此时做优化的。")]),e._v(" "),t("p",[t("strong",[e._v("diff 算法")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("第一步：调用"),t("code",[e._v("patch")]),e._v("方法，传入新旧虚拟 DOM，开始同层对比")])]),e._v(" "),t("li",[t("p",[e._v("第二步：调用"),t("code",[e._v("isSameNode")]),e._v("方法，对比新旧节点是否同类型节点")])]),e._v(" "),t("li",[t("p",[e._v("第三步：如果不同，新节点直接代替旧节点")])]),e._v(" "),t("li",[t("p",[e._v("第四步：如果相同，调用"),t("code",[e._v("patchNode")]),e._v("进行对比节点")])]),e._v(" "),t("li",[t("ul",[t("li",[e._v("如果旧节点和新节点都是文本节点，则新文本代替旧文本")]),e._v(" "),t("li",[e._v("如果旧节点有子节点，新节点没，则删除旧节点的子节点")]),e._v(" "),t("li",[e._v("如果旧节点没有子节点，新节点有，则把子节点新增上去")]),e._v(" "),t("li",[e._v("如果都有子节点，则调用"),t("code",[e._v("updateChildren")]),e._v("方法进行新旧子节点的对比")]),e._v(" "),t("li",[e._v("子节点对比为首尾对比法")])])])]),e._v(" "),t("h2",{attrs:{id:"_37、如果子组件改变-props-里的数据会发生什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_37、如果子组件改变-props-里的数据会发生什么"}},[e._v("#")]),e._v(" 37、如果子组件改变 props 里的数据会发生什么？")]),e._v(" "),t("ul",[t("li",[e._v("基础类型：如果父传给子的是基础类型，修改则会报错")]),e._v(" "),t("li",[e._v("引用类型：如果父传给子的是引用类型，修改属性则会同时修改父组件数据")])]),e._v(" "),t("h2",{attrs:{id:"_38、props-怎么自定义验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_38、props-怎么自定义验证"}},[e._v("#")]),e._v(" 38、props 怎么自定义验证")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("props: {\n    num: {\n      default: 1,\n      validator: function (value) {\n          // 返回值为false则验证不通过，报错\n          return [\n            1, 2, 3, 4, 5\n          ].indexOf(value) !== -1\n    }\n    }\n  }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("h2",{attrs:{id:"_39、watch-的-immediate-属性有什么用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_39、watch-的-immediate-属性有什么用"}},[e._v("#")]),e._v(" 39、watch 的 immediate 属性有什么用？")]),e._v(" "),t("p",[e._v("Vue 实例初始化的时候立即调用 watch 的监听回调函数")]),e._v(" "),t("h2",{attrs:{id:"_40、watch-监听一个对象时-如何排除某些属性的监听"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_40、watch-监听一个对象时-如何排除某些属性的监听"}},[e._v("#")]),e._v(" 40、watch 监听一个对象时，如何排除某些属性的监听")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('mounted() {\n    Object.keys(this.params)\n      .filter((_) => !["c", "d"].includes(_)) // 排除对c，d属性的监听\n      .forEach((_) => {\n        this.$watch((vm) => vm.params[_], handler, {\n          deep: true,\n        });\n      });\n  },\ndata() {\n    return {\n      params: {\n        a: 1,\n        b: 2,\n        c: 3,\n        d: 4\n      },\n    };\n  },\nwatch: {\n    params: {\n      deep: true,\n      handler() {\n        this.getList;\n      },\n    },\n  }\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br")])]),t("h2",{attrs:{id:"_41、审查元素时发现-data-v-xxxxx-这是啥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_41、审查元素时发现-data-v-xxxxx-这是啥"}},[e._v("#")]),e._v(" 41、审查元素时发现 data-v-xxxxx，这是啥？")]),e._v(" "),t("p",[e._v("样式模块化 scoped 的效果，在本组件的标签都会带上 data-v-xxx 的属性，然后通过属性选择器实现样式模块化的效果")]),e._v(" "),t("h2",{attrs:{id:"_42、vue-的-hook-的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_42、vue-的-hook-的使用"}},[e._v("#")]),e._v(" 42、vue 的 hook 的使用？")]),e._v(" "),t("ul",[t("li",[e._v("同一组件中使用")])]),e._v(" "),t("blockquote",[t("p",[e._v("这是我们常用的使用定时器的方式")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export default{\n  data(){\n    timer:null\n  },\n  mounted(){\n      this.timer = setInterval(()=>{\n      //具体执行内容\n      console.log('1');\n    },1000);\n  }\n  beforeDestory(){\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br")])]),t("blockquote",[t("p",[e._v("上面做法不好的地方在于：得全局多定义一个 timer 变量，可以使用 hook 这么做：")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export default{\n  methods:{\n    fn(){\n      let timer = setInterval(()=>{\n        //具体执行代码\n        console.log('1');\n      },1000);\n      this.$once('hook:beforeDestroy',()=>{\n        clearInterval(timer);\n        timer = null;\n      })\n    }\n  }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])]),t("ul",[t("li",[e._v("7.2 父子组件使用")])]),e._v(" "),t("blockquote",[t("p",[e._v("如果子组件需要在 mounted 时触发父组件的某一个函数，平时都会这么写：")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//父组件\n<rl-child @childMounted=\"childMountedHandle\"\n/>\nmethod () {\n  childMountedHandle() {\n  // do something...\n  }\n},\n\n// 子组件\nmounted () {\n  this.$emit('childMounted')\n},\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br")])]),t("blockquote",[t("p",[e._v("使用 hook 的话可以更方便：")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//父组件\n<rl-child @hook:mounted="childMountedHandle"\n/>\nmethod () {\n  childMountedHandle() {\n  // do something...\n  }\n},\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("h2",{attrs:{id:"_43、provide-和-inject-是响应式的吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_43、provide-和-inject-是响应式的吗"}},[e._v("#")]),e._v(" 43、provide 和 inject 是响应式的吗？")]),e._v(" "),t("p",[e._v("引用数据类型响应式，基础数据类型不响应式")]),e._v(" "),t("h2",{attrs:{id:"_44、vue-的-el-属性和-mount-优先级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_44、vue-的-el-属性和-mount-优先级"}},[e._v("#")]),e._v(" 44、Vue 的 el 属性和$mount 优先级？")]),e._v(" "),t("p",[e._v("同时存在时，"),t("code",[e._v("el > $mount")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(606),alt:"图片"}})]),e._v(" "),t("h2",{attrs:{id:"_45、动态指令和参数使用过吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_45、动态指令和参数使用过吗"}},[e._v("#")]),e._v(" 45、动态指令和参数使用过吗？")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<aButton @[someEvent]="handleSomeEvent()" :[someProps]="1000" />\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"_46、相同的路由组件如何重新渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_46、相同的路由组件如何重新渲染"}},[e._v("#")]),e._v(" 46、相同的路由组件如何重新渲染？")]),e._v(" "),t("p",[e._v("更改如有组件上的 key 即可")]),e._v(" "),t("h2",{attrs:{id:"_47、自定义-v-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_47、自定义-v-model"}},[e._v("#")]),e._v(" 47、自定义 v-model")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export default: {\n  model: {\n    event: 'change',\n    prop: 'checked'\n  }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h2",{attrs:{id:"_48、如何将获取-data-中某一个数据的初始状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_48、如何将获取-data-中某一个数据的初始状态"}},[e._v("#")]),e._v(" 48、如何将获取 data 中某一个数据的初始状态？")]),e._v(" "),t("p",[e._v("使用"),t("code",[e._v("this.$options.data().xxx")]),e._v("获取初始值")]),e._v(" "),t("h2",{attrs:{id:"_49、计算变量时-methods-和-computed-哪个好"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_49、计算变量时-methods-和-computed-哪个好"}},[e._v("#")]),e._v(" 49、计算变量时，methods 和 computed 哪个好？")]),e._v(" "),t("p",[e._v("computed 比较好，computed 有缓存机制，可以节省性能。而 method 则每次更新都会重新计算，不考虑缓存")]),e._v(" "),t("h2",{attrs:{id:"_50、router-push、router-replace、router-go-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_50、router-push、router-replace、router-go-的区别"}},[e._v("#")]),e._v(" 50、router.push、router.replace、router.go 的区别？")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("router.push")]),e._v("：跳转，并向 history 栈中加一个记录，可以后退到上一个页面")]),e._v(" "),t("li",[t("code",[e._v("router.replace")]),e._v("：跳转，不会向 history 栈中加一个记录，不可以后退到上一个页面")]),e._v(" "),t("li",[t("code",[e._v("router.go")]),e._v("：传正数向前跳转，传负数向后跳转")])])])}),[],!1,null,null,null);s.default=n.exports}}]);